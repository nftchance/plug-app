model Address {
    id String @id

    vaults Vault[]
}

model Chain {
    id String @id

    vaults Vault[]
}

model Vault {
    address String  @id
    chains  Chain[]
    
    lastBlockIndexed Int
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    adminAddress   Address @relation(fields: [adminAddressId], references: [id])
    adminAddressId String

    livePlugs LivePlugs[]
}

model Domain {
    verifyingContract String
    name              String
    version           String
    chainId           Int
    LivePlugs         LivePlugs[]

    @@id([verifyingContract, name, version, chainId])
}

model Current {
    name String
    type String
    data String

    plugs Plug[]

    @@id([name, type, data])
}

model Fuse {
    target String
    data   String

    plug   Plug?   @relation(fields: [plugId], references: [id])
    plugId String?

    @@id([target, data])
}

model Plug {
    id      String  @id @default(uuid())
    current Current @relation(fields: [currentName, currentType, currentData], references: [name, type, data])
    fuses   Fuse[]

    currentName String
    currentType String
    currentData String

    Plugs   Plugs?  @relation(fields: [plugsId], references: [id])
    plugsId String?
}

model Plugs {
    id String @id @default(uuid())

    socket               String
    plugs                Plug[]
    salt                 String
    fee                  Int
    maxFeePerGas         Int
    maxPriorityFeePerGas Int
    executor             String

    LivePlugs LivePlugs[]
}

model LivePlugs {
    domain            Domain @relation(fields: [verifyingContract, name, version, chainId], references: [verifyingContract, name, version, chainId])
    verifyingContract String
    name              String
    version           String
    chainId           Int

    plugs     Plugs  @relation(fields: [plugsId], references: [id])
    plugsId   String
    signature String

    vault   Vault  @relation(fields: [address], references: [address])
    address String

    @@id([plugsId, address])
}
